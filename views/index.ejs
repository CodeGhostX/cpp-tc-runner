<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>C++ Code Runner</title>

  <!-- Monaco Editor Style -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/monaco-editor@0.34.1/min/vs/editor/editor.main.css">
  
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f5f5f5;
    }

    .container {
      display: flex;
      justify-content: center;
      align-items: flex-start;
      flex-direction: column;
      padding: 10px 20px 20px 20px;
      margin: 0;
    }

    #editor {
      width: 100%;
      height: 50vh;
      margin-top: 20px; /* Added top margin */
    }

    .input-output-wrapper {
      display: flex;
      justify-content: space-between;
      width: 100%;
      margin-top: 20px;
      gap: 20px;
    }

    #inputSection, #output {
      flex: 1;
    }

    #input, #output {
      width: 100%;
      height: 150px;
      background-color: #1e1e1e;
      color: #00FF00;
      padding: 15px;
      border-radius: 5px;
      font-family: 'Courier New', Courier, monospace;
      white-space: pre-wrap;
      overflow-y: auto;
      box-sizing: border-box;
    }

    h1 {
      color: #333;
      text-align: center;
    }

    #runCodeBtn {
      padding: 15px 30px;
      font-size: 18px;
      border: none;
      border-radius: 5px;
      background-color: #4CAF50;
      color: white;
      cursor: pointer;
      margin-top: 20px;
      transition: all 0.3s ease;
      align-self: center;
    }

    #runCodeBtn:hover {
      background-color: #45a049;
      transform: scale(1.05);
    }

    #runCodeBtn:active {
      background-color: #388e3c;
      transform: scale(0.98);
    }

    .expected-output-wrapper {
      display: flex;
      align-items: center;
      gap: 20px;
      margin-top: 20px;
      width: 100%;
    }

    #expectedOutput {
      flex: 1;
      height: 80px;
      background-color: #1e1e1e;
      color: #00FF00;
      font-family: 'Courier New', Courier, monospace;
      padding: 10px;
      border-radius: 5px;
      box-sizing: border-box;
    }

    #statusIndicator {
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background-color: grey;
    }

    #statusLabel {
      font-weight: bold;
    }
  </style>
</head>
<body>
  <div class="container">
    <div id="editor"></div>

    <div class="input-output-wrapper">
      <div id="inputSection">
        <textarea id="input" placeholder="Enter your input here..."></textarea>
      </div>
      <div id="output"></div>
    </div>

    <div class="expected-output-wrapper">
      <textarea id="expectedOutput" placeholder="Expected output..."></textarea>
      <div id="statusIndicator"></div>
      <span id="statusLabel"></span>
    </div>

    <button id="runCodeBtn">Run Code</button>
  </div>

  <!-- Monaco Editor Script -->
  <script src="https://cdn.jsdelivr.net/npm/monaco-editor@0.34.1/min/vs/loader.js"></script>
  <script>
    require.config({ paths: { 'vs': 'https://cdn.jsdelivr.net/npm/monaco-editor@0.34.1/min/vs' }});

    require(['vs/editor/editor.main'], function() {
      var editor = monaco.editor.create(document.getElementById('editor'), {
        value: `#include <bits/stdc++.h>
using namespace std;

#define mod 1000000007
#define int long long

void find(){

}

signed main(){
  ios::sync_with_stdio(false);
  cin.tie(0);
  int t = 1;
  cin >> t;
  while (t--) find();
  return 0;
}`,
        language: 'cpp',
        theme: 'vs-dark',
        automaticLayout: true,
        minimap: { enabled: false }
      });

      document.getElementById('runCodeBtn').onclick = function() {
        const code = editor.getValue();
        const input = document.getElementById('input').value;
        const expected = document.getElementById('expectedOutput').value.trim();
        const status = document.getElementById('statusIndicator');
        const label = document.getElementById('statusLabel');

        fetch('/run', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ code, input })
        })
        .then(response => response.json())
        .then(data => {
          const output = data.output || data.error || "";
          document.getElementById('output').textContent = output;

          if (output.trim() === expected) {
            status.style.backgroundColor = 'green';
            label.textContent = "✅ Correct Output";
          } else {
            status.style.backgroundColor = 'red';
            label.textContent = "❌ Wrong Output";
          }
        })
        .catch(error => console.error('Error:', error));
      };
    });
  </script>
</body>
</html>
